<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="site_config" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="monorail" type="Castle.MonoRail.Framework.Configuration.MonoRailSectionHandler, Castle.MonoRail.Framework" />
    <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <!-- 
		For more on MonoRail configuration see 
		http://www.castleproject.org/monorail/documentation/v1rc3/index.html
	-->
  <connectionStrings>
    <add name="DatabaseConnectionString" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True;User Instance=True"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <monorail smtpHost="mail.wsu.edu" useWindsorIntegration="true">
    <viewEngines viewPathRoot="Views">
      <add xhtml="false" type="Castle.MonoRail.Framework.Views.NVelocity.NVelocityViewEngine, Castle.MonoRail.Framework.Views.NVelocity" />
    </viewEngines>
    <routing>
      <rule>
        <pattern>/install/$</pattern>
        <replace><![CDATA[ ~/install/install.castle ]]></replace>
      </rule>
      <rule>
        <pattern>/admin$</pattern>
        <replace><![CDATA[ ~/admin/admin.castle ]]></replace>
      </rule>
      <rule>
        <pattern>/admin/$</pattern>
        <replace><![CDATA[ ~/admin/admin.castle ]]></replace>
      </rule>
      <rule>
        <pattern>^/ams/</pattern>
        <replace><![CDATA[ /public/render.castle?everUrl=$1 ]]></replace>
      </rule>
      <rule>
        <pattern>/feed/</pattern>
        <replace><![CDATA[ /feed/render.castle?everUrl=$1 ]]></replace>
      </rule>
      <rule>
        <pattern>/$</pattern>
        <replace><![CDATA[ ~/center/home.castle ]]></replace>
      </rule>
      <rule>
        <pattern>/index.html</pattern>
        <replace><![CDATA[ ~/center/home.castle ]]></replace>
      </rule>
      <controllers>
        <assembly>Castle.Monorail.ViewComponents</assembly>
      </controllers>
    </routing>
  </monorail>
  <system.web>
    <sessionState timeout="1" />
    <httpHandlers>
      <!-- block direct user access to template files -->
      <add verb="*" path="*.vm" type="System.Web.HttpForbiddenHandler" />
      <add verb="*" path="*.njs" type="System.Web.HttpForbiddenHandler" />
      <add verb="*" path="*.brail" type="System.Web.HttpForbiddenHandler" />
      <add verb="*" path="*.brailjs" type="System.Web.HttpForbiddenHandler" />
      <add verb="*" path="*.st" type="System.Web.HttpForbiddenHandler" />
      <!--
      <add verb="*" path="*.css" type="System.Web.StaticFileHandler" />
      <add verb="*" path="*.js" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.js" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.jpg" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.gif" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.png" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.jpeg" type="System.Web.StaticFileHandler" />
      -->
      <add verb="*" path="*/site_content/*" type="System.Web.StaticFileHandler" />
      <add verb="*" path="*.castle" type="Castle.MonoRail.Framework.MonoRailHttpHandlerFactory, Castle.MonoRail.Framework" />
      <add verb="*" path="*.html" type="Castle.MonoRail.Framework.MonoRailHttpHandlerFactory, Castle.MonoRail.Framework" />
      <!-- -->
      <!--<add verb="*" path="*" type="Castle.MonoRail.Framework.MonoRailHttpHandlerFactory, Castle.MonoRail.Framework" />
      -->
    </httpHandlers>
    <httpModules>
      <add name="routing" type="Castle.MonoRail.Framework.RoutingModule, Castle.MonoRail.Framework" />
      <add name="ar_sessionscope" type="Castle.ActiveRecord.Framework.SessionScopeWebModule, Castle.ActiveRecord" />
    </httpModules>
    <!--<customErrors mode="Off" />-->
    <customErrors mode="RemoteOnly" defaultRedirect="/public/error.castle" redirectMode="ResponseRedirect">
      <error statusCode="404" redirect="/public/error.castle" />
      <error statusCode="500" redirect="/public/error.castle" />
    </customErrors>
    <httpRuntime requestValidationMode="2.0" executionTimeout="19600" maxRequestLength="1048576" />
    <compilation debug="true" targetFramework="4.0"></compilation>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" />
    <authentication mode="Forms">
      <forms name="oauthSP" />
    </authentication>
  </system.web>
  <!--Container configuration. For more information see http://www.castleproject.org/container/documentation/trunk/manual/windsorconfigref.html-->
  <!--and http://www.castleproject.org/container/documentation/trunk/usersguide/compparams.html-->
  <castle>
    <include uri="file://Config/properties.config" />
    <include uri="file://Config/facilities.config" />
    <include uri="file://Config/controllers.config" />
    <include uri="file://Config/components.config" />
  </castle>
  <system.serviceModel>
    <behaviors>
      <!-- The Json behaviour-->
      <endpointBehaviors>
        <behavior name="JsonBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="DataApiBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceAuthorization serviceAuthorizationManagerType="OauthPoc.Code.OAuthAuthorizationManager, OauthPoc" principalPermissionMode="Custom" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="DataApiBehavior" name="stellar.Service1">
        <endpoint address="" behaviorConfiguration="JsonBehavior" binding="webHttpBinding" contract="stellar.IService1">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  <system.webServer>
    <httpProtocol>
      <customHeaders>
        <add name="X-UA-Compatible" value="IE=Edge,chrome=1" />
        <add name="Access-Control-Allow-Origin" value="*" />
      </customHeaders>
    </httpProtocol>
    <httpCompression directory="%SystemDrive%\inetpub\temp\IIS Temporary Compressed Files">
      <scheme name="gzip" dll="%Windir%\system32\inetsrv\gzip.dll" />
      <dynamicTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="*/*" enabled="false" />
      </dynamicTypes>
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="message/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="*/*" enabled="false" />
      </staticTypes>
    </httpCompression>
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    <handlers>
      <add name="TinyMCE" path="TinyMCEHandler.aspx" verb="*" type="Moxiecode.TinyMCE.Web.HttpHandler, Moxiecode.TinyMCE" />
      <add name="MonoRail" path="*.castle" verb="*" type="Castle.MonoRail.Framework.MonoRailHttpHandlerFactory,Castle.MonoRail.Framework" preCondition="integratedMode" />
      <add name="MonoRail2" path="*.html" verb="*" type="Castle.MonoRail.Framework.MonoRailHttpHandlerFactory,Castle.MonoRail.Framework" preCondition="integratedMode" />
    </handlers>
    <defaultDocument>
      <!--<files>
        <clear />
        <add value="default.aspx" />
      </files>-->
      <files>
        <clear />
        <add value="index.html" />
      </files>
    </defaultDocument>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="routing" type="Castle.MonoRail.Framework.RoutingModule, Castle.MonoRail.Framework" preCondition="managedHandler" />
      <add name="ar_sessionscope" type="Castle.ActiveRecord.Framework.SessionScopeWebModule, Castle.ActiveRecord" preCondition="managedHandler" />
    </modules>
    <validation validateIntegratedModeConfiguration="false" />
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Castle.MonoRail.ActiveRecordSupport" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="NHibernate" publicKeyToken="aa95f207798dfdb4" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.2.4000" newVersion="2.1.2.4000" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Yahoo.Yui.Compressor" publicKeyToken="f8b4b81ec75097e2" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.7.0.0" newVersion="1.7.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <legacyHMACWarning enabled="0" />
  </runtime>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <add name="localhost" />
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- problably will never be used but included so that just in case-->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
      <provider></provider>
    </openid>
  </dotNetOpenAuth>
  <!-- the site config parts, maybe move out here -->
  <site_config>
    <add key="installed" value="False" />
    <add key="root" value="E:\_REPO_\HIV PROJECT\stellar" />
  </site_config>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>